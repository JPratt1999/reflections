What happens when you initialize a repository? Why do you need to do it?

	When you initialize a repository a new directory is created, that saves the commits

How is the staging area different from the working directory and the repository?
What value do you think it offers?

	The working directory contains all files and the staging area can be just one 
	or two files at once, while the rest is left out.

How can you use the staging area to make sure you have one commit per logical
change?

	You can leave out the files that don't contain of logical change.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

	When you have an idea to add to a file and you don't know if it's going to work. So you don't add it to
	working file.

How do the diagrams help you visualize the branch structure?

	You can see if there might be a commit missing that will not show up in the history of the log.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

	Both of the changes that were made in each branch are represented in the new version.

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?

	You don't have as much work to do and this reduces the possibility of mistakes that can be made.